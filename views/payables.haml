-# SPDX-FileCopyrightText: Copyright (c) 2018-2025 Zerocracy
-# SPDX-License-Identifier: MIT

%h2
  Payables

- list = payables.fetch

- if list.empty?
  %p
    There are no wallets.
- else
  %p
    The largest wallets in the network:
  %table.compact
    %colgroup
      %col{style: 'width: 5em'}
      - if defined?(guser) && vip?
        %col{style: 'width: 6em'}
      %col{style: 'width: 6em'}
      %col{style: 'width: 3em'}
      %col{style: 'width: 3em'}
      %col{style: ''}
    %thead
      %tr
        %th
          Wallet
        - if defined?(guser) && vip?
          %th
            Login
        %th
          Balance
        %th
          Txns
        %th
          Updated
        %th
          Found at
    %tbody
      - list.each do |p|
        %tr
          %td
            %code
              %a{href: "http://www.zold.io/ledger.html?wallet=#{p[:id]}"}= p[:id]
          - if defined?(guser) && vip?
            %td
              - if p[:login]
                %code
                  = p[:login]
              - else
                = '&mdash;'
          %td.right.monospace{title: p[:balance].to_i.to_s}
            = p[:balance].to_zld
          %td.right.monospace{title: p[:txns].to_s, class: p[:txns] > 1000 ? 'firebrick' : ''}
            = p[:txns]
          %td{title: p[:updated].utc.iso8601}
            = Zold::Age.new(p[:updated])
          %td
            %a{href: "http://#{p[:node]}/wallet/#{p[:id]}.txt"}= p[:node]
  - balance = payables.balance
  %p
    Total visible balance is
    %strong= balance
    in
    = payables.total
    wallets, which is worth around
    = (balance.to_f * rate).round(2)
    bitcoins (approx.
    = "#{WTS::Dollars.new(balance.to_f * rate * price / 1000)}K"
    at this moment).
    = payables.txns
    transactions total.
