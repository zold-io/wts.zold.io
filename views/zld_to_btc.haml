- # (The MIT License)
- #
- # Copyright (c) 2018-2025 Zerocracy
- #
- # Permission is hereby granted, free of charge, to any person obtaining a copy
- # of this software and associated documentation files (the 'Software'), to deal
- # in the Software without restriction, including without limitation the rights
- # to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
- # copies of the Software, and to permit persons to whom the Software is
- # furnished to do so, subject to the following conditions:
- #
- # The above copyright notice and this permission notice shall be included in all
- # copies or substantial portions of the Software.
- #
- # THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- # IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- # FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
- # AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
- # LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
- # OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
- # SOFTWARE.

%script{src: '/js/zld_to_btc.js'}

%img{src: iri.cut('/bitcoin-logo.svg'), style: 'height: 64px; float: right;'}

%h2
  Sell Zolds and Receive Bitcoins

%p
  The rate is
  %strong= rate
  BTC/ZLD, or about
  = succeed '.' do
    %strong= WTS::Dollars.new(rate * price)
  %a{href: iri.cut('/rate')} Why?

%p
  To sell your ZLD and receive BTC just fill this form
  and we will send you the payment promptly, deducting
  = "#{(fee * 100)}%"
  fee.
  We will also deduct Bitcoin transaction fee, which is
  approximately
  %span#btc_fee= format('%.06f', btc_fee)
  BTC
  = "(#{WTS::Dollars.new(btc_fee * price)})"
  = succeed '.' do
    %a{href: 'https://bitcoinfees.info/'} at the moment

%p
  - if available.zero?
    = succeed ':' do
      %span.strong.firebrick SORRY
    We have no bitcoins left in our
    = succeed ',' do
      %a{href: iri.cut('/assets')} assets
    please come back a bit later.
  - else
    We can send up to
    = format('%.04f', available)
    BTC now (Not enough?
    = succeed ').' do
      %a{href: 'https://t.me/zold_io'}
        Ping us!

%form{method: 'POST', action: iri.cut('/do-zld-to-btc')}
  %fieldset
    = Rack::Csrf.tag(env)
    %label
      Your
      %a{href: 'https://blog.zold.io/2018/07/18/keygap.html'} keygap
      (is it
      = succeed '):' do
        %a{href: 'https://blog.zold.io/2019/03/30/keygap-is-lost.html'} lost?
    %input{type: 'password', name: 'keygap', autocomplete: 'off', tabindex: 1, autofocus: true, maxlength: 32}
    %label
      The amount of ZLD to sell
      = succeed ':' do
        - if user.wallet_exists?
          (your current balance is
          = succeed ')' do
            %code= user.wallet(&:balance)
        - else
          = ''
    %input#zld{type: 'text', name: 'amount', size: 12, maxlength: 8, autocomplete: 'off', tabindex: 2, oninput: "wts_rerate(#{rate.round(8)}, #{price.round(2)}, #{fee.round(4)});"}
    %label.gray.smaller#out
    %label
      Bitcoin
      %a{href: 'https://en.bitcoin.it/wiki/Address'} address
      to send to, in
      = succeed ',' do
        %a{href: 'https://en.bitcoin.it/wiki/Transaction#Pay-to-PubkeyHash'} P2PKH
      = succeed ',' do
        %a{href: 'https://en.bitcoin.it/wiki/Pay_to_script_hash'} P2SH
      or
      %a{href: 'https://en.bitcoin.it/wiki/Bech32'} Bech32
      format:
    %input{type: 'text', name: 'btc', maxlength: 50, size: 45, autocomplete: 'off', tabindex: 3}
    %input{type: 'submit', onclick: "return confirm('Are you sure? This operation is not reversable!')", tabindex: 4, value: 'Sell'}

%p
  This
  %a{href: 'https://blog.zold.io/2018/12/09/btc-to-zld.html'} blog post
  explains how this exchange mechanism works.

%p
  If any issues or the payment is lost, contact us in our
  = succeed '.' do
    %a{href: 'https://t.me/zold_io'} Telegram group
