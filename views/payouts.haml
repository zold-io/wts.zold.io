- # (The MIT License)
- # 
- # Copyright (c) 2018-2025 Zerocracy
- # 
- # Permission is hereby granted, free of charge, to any person obtaining a copy
- # of this software and associated documentation files (the 'Software'), to deal
- # in the Software without restriction, including without limitation the rights
- # to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
- # copies of the Software, and to permit persons to whom the Software is
- # furnished to do so, subject to the following conditions:
- # 
- # The above copyright notice and this permission notice shall be included in all
- # copies or substantial portions of the Software.
- # 
- # THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- # IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- # FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
- # AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
- # LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
- # OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
- # SOFTWARE.

%h2
  Payouts

%p
  Total system consumption (day/week/month):
  = succeed ';' do
    %code= system_consumed
  system limits:
  = succeed '.' do
    %code= system_limits

%p
  Your consumption:
  = succeed ';' do
    %code= consumed
  your limits:
  = succeed '.' do
    %code= limits

- list = payouts.fetch(confirmed_user.login)

- if list.empty?
  %p
    There are no payouts as of yet.
    If you have any ZLD in your wallet, you can
    %a{here: '/buy-sell'} sell them
    any time.
- else
  %p
    The full list of your recent payouts:
  %table.compact
    %colgroup
      %col{style: 'width: 2em'}
      %col{style: 'width: 5em'}
      %col{style: 'width: 4em'}
      %col{style: 'width: 4em'}
      %col{style: ''}
    %thead
      %tr
        %th
          ID
        %th
          Wallet
        %th.right
          ZLD
        %th
          Created
        %th
          Details
    %tbody
      - list.each do |p|
        %tr
          %td
            = p[:id]
          %td
            %code
              %a{href: "http://www.zold.io/ledger.html?wallet=#{p[:wallet]}"}= p[:wallet]
          %td.right.monospace
            = p[:amount].to_zld
          %td{title: p[:created].utc.iso8601}
            = Zold::Age.new(p[:created])
          %td
            = largetext(p[:details])

- if confirmed_user.login == 'yegor256'
  %p
    The full list of all payouts of all users:
  %table.compact
    %colgroup
      %col{style: 'width: 5em'}
      %col{style: 'width: 5em'}
      %col{style: 'width: 2em'}
      %col{style: 'width: 3em'}
      %col{style: ''}
    %thead
      %tr
        %th
          Login
        %th
          Wallet
        %th.right
          ZLD
        %th
          Created
        %th
          Details
    %tbody
      - payouts.fetch_all.each do |p|
        %tr
          %td
            = p[:login]
          %td
            %code
              %a{href: "http://www.zold.io/ledger.html?wallet=#{p[:wallet]}"}= p[:wallet]
          %td.right.monospace
            = p[:amount].to_zld
          %td{title: p[:created].utc.iso8601}
            = Zold::Age.new(p[:created])
          %td
            = largetext(p[:details])
